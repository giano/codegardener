// Generated by CoffeeScript 1.6.3
var FlowerMessage, createFlower, create_flowers_page, flower_temp_html, layers_def, template;

$(function() {
  var on_exit;
  return on_exit = function() {
    $("body").removeClass("reading");
    return $(".parallax").parallax("enable");
  };
}, $(".parallax").on("touchstart", on_exit).parallax({
  limitY: 50
}), flower_temp_html = $("#flower_template").html(), template = Handlebars.compile(flower_temp_html), layers_def = {
  ".navbar-brand": {
    color: "#ffffff",
    scale: 0.2
  },
  ".parallax .c-front": {
    color: "#ffffff",
    scale: 1
  },
  ".parallax .c-mid": {
    color: "#cccccc",
    scale: 0.5
  }
}, createFlower = function(layer, x, y, phrase) {
  var f_body, flower_color, new_flower, scale, _ref, _ref1;
  if (x == null) {
    x = 0;
  }
  if (y == null) {
    y = 0;
  }
  if (phrase == null) {
    phrase = "var express = require('express'); var app = express();";
  }
  flower_color = (_ref = layers_def[layer]) != null ? _ref.color : void 0;
  scale = ((_ref1 = layers_def[layer]) != null ? _ref1.scale : void 0);
  new_flower = $(template({
    phrase: phrase
  })).css({
    left: x,
    top: y,
    color: flower_color,
    transform: "scale(" + scale + ")"
  });
  new_flower.appendTo("" + layer + " .flowers_container").find(".body .line").arctext({
    radius: 400
  });
  f_body = new_flower.find(".flower").addClass("display").find(".body").css({
    transform: "rotate(" + (_.random(-10, 10)) + "deg)"
  });
  return (function(f_body) {
    return setInterval(function() {
      return f_body.css({
        transform: "rotate(" + (_.random(-10, 10)) + "deg)"
      });
    }, 10000);
  })(f_body);
}, FlowerMessage = Parse.Object.extend("Flower"), create_flowers_page = function(page) {
  var query, step;
  if (page == null) {
    page = 0;
  }
  query = new Parse.Query(FlowerMessage).equalTo("moderated", true).limit(100).skip(page * 100).descending("createdAt");
  step = $(window).width() * page;
  return query.find().then(function(flowers) {
    var flower, index, timeout, _i, _len, _results;
    _results = [];
    for (index = _i = 0, _len = flowers.length; _i < _len; index = ++_i) {
      flower = flowers[index];
      timeout = index * 700;
      _results.push((function(flower, index) {
        return setTimeout(function() {
          return createFlower(flower.get("layer"), flower.get("x") + step, flower.get("y"), flower.get("message"));
        }, timeout);
      })(flower, index));
    }
    return _results;
  });
}, create_flowers_page(0));

/*
//@ sourceMappingURL=main.map
*/
